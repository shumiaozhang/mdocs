import{_ as s,o as n,c as a,U as l}from"./chunks/framework.adbdbaa5.js";const F=JSON.parse('{"title":"tsconfig.json","description":"","frontmatter":{},"headers":[],"relativePath":"ts/tsconfig.md","filePath":"ts/tsconfig.md"}'),o={name:"ts/tsconfig.md"},e=l(`<h1 id="tsconfig-json" tabindex="-1">tsconfig.json <a class="header-anchor" href="#tsconfig-json" aria-label="Permalink to &quot;tsconfig.json&quot;">​</a></h1><p>tsc的编译参数不仅可以写在命令行里，也能写在配置文件中。</p><p>只要当前目录有这个文件，<code>tsc</code>就会自动读取，所以运行时可以不写参数。</p><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h3><p>noImplicitAny：</p><ul><li>如果被ts推断为any类型，会报错</li></ul><p>strictNullChecks：</p><ul><li>打开后，如果变量没有声明类型，变量赋值为undefined，则会推断为undefined，赋值为null，会被推断为null，而不会被推断为any类型。</li><li>undefined、null就不能赋值给其他类型的变量，只能给自身或者any、unknown类型赋值，否则会报错</li><li>void类型只允许返回undefined，如果返回null会报错，因为js规定，如果函数没有返回值，就等于返回undefined。</li></ul><p>ExactOptionalPropertyTypes &amp;&amp; strictNullChecks：</p><ul><li>同时打开，对象的可选属性就不能设置为undefined</li></ul><p>suppressExcessPropertyErrors：</p><ul><li>是否关闭ts对对象字面量类型的严格检查 </li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">strictNullChecks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">suppressExcessPropertyErrors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),t=[e];function p(c,r,i,u,D,d){return n(),a("div",null,t)}const _=s(o,[["render",p]]);export{F as __pageData,_ as default};
