import{_ as s,c as t,o as i,a2 as a}from"./chunks/framework.DwDoyBw8.js";const E=JSON.parse('{"title":"useAttrs()、useSlots()","description":"","frontmatter":{},"headers":[],"relativePath":"vue3/sfc/useSlots.md","filePath":"vue3/sfc/useSlots.md","lastUpdated":1712760158000}'),e={name:"vue3/sfc/useSlots.md"},l=a(`<h1 id="useattrs-、useslots" tabindex="-1">useAttrs()、useSlots() <a class="header-anchor" href="#useattrs-、useslots" aria-label="Permalink to &quot;useAttrs()、useSlots()&quot;">​</a></h1><p>如果想在js中使用穿透Attributes，可以使用useAttrs()</p><p>在 <code>&lt;script setup&gt;</code>vue会自动提供slots 和 attrs，因为可以在模板中可以直接通过 $slots 和 $attrs 来访问它们</p><p>在<code>setup</code>中如果想获取，需要先调用<code>useSlots()</code>、<code>useAttrs()</code></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useSlots, useAttrs } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> slots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useSlots</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAttrs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>注意</strong></p><ul><li><p>useAttrs 是真实的运行时函数，它的返回与setupContext.attrs一样</p></li><li><p>useSlots 是真实的运行时函数，它的返回与setupContext.slots一样</p></li><li><p>也能在普通的组合式 API 中使用。</p></li></ul>`,7),n=[l];function p(h,k,r,o,d,c){return i(),t("div",null,n)}const g=s(e,[["render",p]]);export{E as __pageData,g as default};
