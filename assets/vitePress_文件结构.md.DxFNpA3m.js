import{_ as s,c as a,o as n,a2 as e}from"./chunks/framework.DwDoyBw8.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vitePress/文件结构.md","filePath":"vitePress/文件结构.md"}'),p={name:"vitePress/文件结构.md"},t=e(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// vitePressDemo</span></span>
<span class="line"><span>.</span></span>
<span class="line"><span>├─ docs</span></span>
<span class="line"><span>│  ├─ .vitepress</span></span>
<span class="line"><span>│  │  └─ config.js</span></span>
<span class="line"><span>│  ├─ api-examples.md</span></span>
<span class="line"><span>│  ├─ markdown-examples.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>└─ package.json</span></span></code></pre></div><p>使用npm init或者yarn init生成package.json文件后，以当前目录搭建vitePress项目（比如docs文件夹）,docs文件夹称为项目根。</p><h3 id="vitepress" tabindex="-1">.vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;.vitepress&quot;">​</a></h3><p>.vitepress文件夹是根目录下的文件夹(docs)，里面储存VitePress 配置文件、开发服务器缓存、构建输出和可选主题自定义代码。</p><p><strong>配置文件：</strong>.vitepress -&gt; config.js称为配置文件。可以配置项目的标题、描述、主题等。</p><p><strong>config.js文件很重要，所有的配置项都写在这里!!!</strong></p><p><strong>源文件：</strong>.vitepress之外的md文件</p><h3 id="_1-项目根目录" tabindex="-1">1. 项目根目录 <a class="header-anchor" href="#_1-项目根目录" aria-label="Permalink to &quot;1. 项目根目录&quot;">​</a></h3><p>其实就是与.vitepress同级的位置。</p><p>假设项目名称为vitePressDemo。</p><p>如果运行指令vitepress dev，则会把这个目录作为项目根目录，在这个目录下需要有一个.vitepress文件夹，是 VitePress 配置文件、开发服务器缓存、构建输出和可选主题自定义代码的保留位置。</p><p>如果想把vitePressDemo文件夹的子文件夹(docs)当成项目根目录，则可以直接运行vitepress dev docs, 给指令传递一个相对路径，然后就把那个子文件夹当成项目根目录。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├─ docs                    # project root</span></span>
<span class="line"><span>│  ├─ .vitepress           # config dir</span></span>
<span class="line"><span>│  ├─ getting-started.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>└─ ...</span></span></code></pre></div><p>这里代表docs为项目的根目录</p><p>当项目运行起来后，路由访问为/index.html 、/getting-started.html</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docs/index.md            --&gt;  /index.html (accessible as /)</span></span>
<span class="line"><span>docs/getting-started.md  --&gt;  /getting-started.html</span></span></code></pre></div><h3 id="_2-源目录" tabindex="-1">2. 源目录 <a class="header-anchor" href="#_2-源目录" aria-label="Permalink to &quot;2. 源目录&quot;">​</a></h3><p>就是docs下的所有md文件，也就是与.vitepress文件夹同级的。但是假如你想放在docs下的子目录内，可以使用srcDir来配置。</p><p>srcDir 选项是相对于项目根目录解析的。例如，使用 srcDir: &#39;src&#39;，文件结构则为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.                          # project root</span></span>
<span class="line"><span>├─ .vitepress              # config dir</span></span>
<span class="line"><span>└─ src                     # source dir</span></span>
<span class="line"><span>├─ getting-started.md</span></span>
<span class="line"><span>└─ index.md</span></span></code></pre></div><p>生成到html为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>src/index.md            --&gt;  /index.html (accessible as /)</span></span>
<span class="line"><span>src/getting-started.md  --&gt;  /getting-started.html</span></span></code></pre></div>`,22),i=[t];function c(l,o,d,r,g,h){return n(),a("div",null,i)}const u=s(p,[["render",c]]);export{m as __pageData,u as default};
