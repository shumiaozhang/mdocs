import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.DwDoyBw8.js";const g=JSON.parse('{"title":"记录问题","description":"","frontmatter":{},"headers":[],"relativePath":"js/js/problem.md","filePath":"js/js/problem.md","lastUpdated":1712676697000}'),t={name:"js/js/problem.md"},n=e(`<h1 id="记录问题" tabindex="-1">记录问题 <a class="header-anchor" href="#记录问题" aria-label="Permalink to &quot;记录问题&quot;">​</a></h1><h3 id="_1-vue中由a跳转到详情页样式未生效-需刷新" tabindex="-1">1. Vue中由A跳转到详情页样式未生效，需刷新 <a class="header-anchor" href="#_1-vue中由a跳转到详情页样式未生效-需刷新" aria-label="Permalink to &quot;1. Vue中由A跳转到详情页样式未生效，需刷新&quot;">​</a></h3><p>路由跳转为： /a/index =&gt; /a/details 情况发生的</p><p>后来发现原来是elementUI中<code>el-row</code>、<code>el-col</code>中的<code>padding=0</code> 和<code>marage=0</code>中使用了<code>important</code>。</p><p><strong>解决方法</strong>：相应的加权重</p><h3 id="_2-vue项目左侧菜单栏权限问题" tabindex="-1">2. Vue项目左侧菜单栏权限问题 <a class="header-anchor" href="#_2-vue项目左侧菜单栏权限问题" aria-label="Permalink to &quot;2. Vue项目左侧菜单栏权限问题&quot;">​</a></h3><p>左侧菜单栏是根据后台下发的权限进行展示的，前端针对每个路由都设定了一个标识，当登录成功后更据后台下发的权限，将这个标识符进行改变 从而实现了菜单展示的不同。</p><p><strong>如何触发问题</strong></p><p>一开始登录一个权限比较多的账号，然后退出，登录一个比较少的权限，且同一个一级菜单的二级菜单比刚才的要少(比如刚才的账号这个一级菜单的 二级菜单有两个，这个账号只有一个)，这时登录之后，也会显示两个，但应该显示一个，假如此时刷新页面则会正常显示(显示一个页面)。</p><p>如果在第一个账号登录后刷新下页面，登录第二个账号也会显示正常。</p><p>如果在第一个账号登录后，另起一个页签，登录第二个账号也会显示正常。</p><p><strong>问题原因</strong></p><p>通过<code>debugger</code>发现而知，第二次登录时不应该显示的那个路由的标识为true，但是初始化应该为false，才对。后来经过思考，Vue是单页面 刷新不像原生或者jQuery那样，当我点击退出了，虽然页面跳到了login页面，但是上一个账号拥有的权限，那个标识其实还没有进行初始化呢， 所以需要进行手动刷新一下就好。解决方法就是当路由跳转到login页面时，将路由的标识进行初始化即可。</p><h3 id="_3-vue项目使用cookie判断是否登录" tabindex="-1">3. Vue项目使用cookie判断是否登录 <a class="header-anchor" href="#_3-vue项目使用cookie判断是否登录" aria-label="Permalink to &quot;3. Vue项目使用cookie判断是否登录&quot;">​</a></h3><p>一般使用cookie判断登录，方法为后台在登录成功后跟随响应体设置cookie(set-cookie),浏览器会自动存储，在以后的每次请求接口时，浏览器 会自动在请求头中添加cookie,不需要前端写任何代码。</p><p><strong>出现问题</strong></p><p>有一天登录时，登录成功后页面立马就有返回到了login页面，前端也设置了权限，如何没有了某些权限就会自动跳转到登录页。打开F12后再次 登录，发现登录接口是成功了，跳转页面的接口请求结果为用户未登录，当登录是成功了，参数也对啊。给后台说就是因为没有登录成功，cookie 不对，自己也在postman请求是没问题，但是那个cookie是浏览器是会自动存储自动加到请求头中的。后来发现登录接口下发的cookie跟请求头 的cookie是不一样，后来想，即然浏览器会存储cookie，会不会有缓存呢，就手动进行了删除。下次登录时，发现登录时成功了也下发了cookie， 别的接口请求时的请求体其实是没有cookie的，意思说之前的cookie其实是缓存，其实浏览器没有自动存储成功。后来经过查资料问人才知道原来是 因为域的不同，跨域的原因。项目代理线上的开发不行，但是连线上的测试却可以。后台找到运维，直接代理到这个项目的服务上，通了。</p><h3 id="_4-遍历多个元素-删除指定的类名" tabindex="-1">4. 遍历多个元素，删除指定的类名 <a class="header-anchor" href="#_4-遍历多个元素-删除指定的类名" aria-label="Permalink to &quot;4. 遍历多个元素，删除指定的类名&quot;">​</a></h3><p><strong>类名作用</strong></p><p>碰到的问题，提交表单时，这个类名判断是否表单的校验是否正确，如果要是有这个类名则代表校验又错，不能提交。</p><p><strong>出现问题</strong></p><p>表单提交时，有一个下拉框(select)，通过选择不同的值，下部分展示的表单也不同，因此当选择下拉框时要吧这个类名清空掉做一个初始化， 否则提交时会有可能有提示。</p><p>写的时候遍历的是这个类名的长度，然后再删除这个类名(arr[i]), 但是这样是有问题的，假如有长度为4，但是只能删掉两个。如果为两个就会 删除一个，通过debug后才发现，删除一个后长度也会变短，进而导致([i])不对。</p><p><strong>解决</strong></p><ol><li><p>删除的时候永远删除第一项就会解决</p></li><li><p>直接遍历这个类名的元素，而不是遍历拥有这个类名的元素</p></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aCur1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementsByClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;reg_right&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aCur1.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aLength; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (aCur1[i].classList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Cur1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aCur1[i].classList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Cur1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,26),p=[n];function l(h,k,o,r,d,E){return a(),i("div",null,p)}const u=s(t,[["render",l]]);export{g as __pageData,u as default};
