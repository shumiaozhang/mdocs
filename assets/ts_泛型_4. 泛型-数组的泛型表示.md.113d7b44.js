import{_ as s,o as a,c as n,U as p}from"./chunks/framework.adbdbaa5.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ts/泛型/4. 泛型-数组的泛型表示.md","filePath":"ts/泛型/4. 泛型-数组的泛型表示.md","lastUpdated":1711942069000}'),l={name:"ts/泛型/4. 泛型-数组的泛型表示.md"},t=p(`<p>使用ts原生的类型接口Array&lt;T&gt;</p><p>在ts中Array是一个泛型接口，基础实现如下</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">length</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">pop</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;font-style:italic;">items</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>像ts中的Map、Set和Promise都是泛型接口，完整写法是Map&lt;K, V&gt;、Set&lt;T&gt;和Promise&lt;T&gt;</p><p>只读数组泛型：</p><p><code>ReadonlyArray&lt;T&gt;</code>：数组成员是T类型，个别成员是这个类型</p><p>Readonly&lt;T[]&gt;：整个数组都是T[]类型，全部都是这个类型</p>`,7),e=[t];function o(c,r,y,F,i,D){return a(),n("div",null,e)}const A=s(l,[["render",o]]);export{C as __pageData,A as default};
