import{_ as s,o as a,c as n,U as p}from"./chunks/framework.adbdbaa5.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ts/类型系统/13. typeof运算符.md","filePath":"ts/类型系统/13. typeof运算符.md","lastUpdated":1711942069000}'),o={name:"ts/类型系统/13. typeof运算符.md"},l=p(`<h2 id="_1-介绍" tabindex="-1"> 1. 介绍 <a class="header-anchor" href="#_1-介绍" aria-label="Permalink to &quot;&amp;#x20;1. 介绍&quot;">​</a></h2><p>在js中typeof是一个运算符，<strong>操作的是一个值,返回一个字符串，代表该值的数据类型。</strong></p><p>在ts中typeof操作的<strong>也是一个值，返回的是该值的ts类型，只能用在类型运算之中，不能用在值运算。</strong></p><p>也就是说，同一段代码可能存在两种<code>typeof</code>运算符，一种用在值相关的 JavaScript 代码部分，另一种用在类型相关的 TypeScript 代码部分。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">:typeof</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 类型运算，类型检查</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 值运算</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>注意点：</p><ul><li>参数不能是一个类型</li></ul>`,7),t=[l];function e(c,r,y,i,D,_){return a(),n("div",null,t)}const A=s(o,[["render",e]]);export{F as __pageData,A as default};
