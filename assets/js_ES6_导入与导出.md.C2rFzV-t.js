import{_ as a,c as s,o as i,a4 as d}from"./chunks/framework.E4YCCYO0.js";const t="/assets/inherit.BipNsIIi.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"js/ES6/导入与导出.md","filePath":"js/ES6/导入与导出.md"}'),e={name:"js/ES6/导入与导出.md"},n=d(`<p data-v-d4c2606e>一个模块就是一个独立的文件，这个文件中的所有变量，只能在文件内部使用，假如想在外部使用，则必须先导出，然后在使用的文件中进行导入 才能使用。</p><p data-v-d4c2606e>在讲ES6中的导入导出之前，需要我们知道的是之前JavaScript并没有真正意义的模块化。之前社区指定了一些模块化方案，分别是commonJS和AMD两种， 而ES6引入的导入与导出完全可以替代之前的。</p><h2 id="_1-设计思想-静态化" tabindex="-1" data-v-d4c2606e>1. 设计思想 - 静态化 <a class="header-anchor" href="#_1-设计思想-静态化" aria-label="Permalink to &quot;1. 设计思想 - 静态化&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e>这样的好处就是在编译的时候就能确定模块的依赖关系，而不是等到运行的时候。commonJS和AMD就是运行的时候 才能知道那些会用到那些不会被用到，这样效率会变低。</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// CommonJS模块</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { stat, exists, readfile } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;fs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>);</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 等同于</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> _fs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;fs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>);</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> stat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> _fs.stat;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> exists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> _fs.exists;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> readfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> _fs.readfile;</span></span></code></pre></div><p data-v-d4c2606e>在commonJS中，它会加载这个模块中所有的方法，生成一个大对象，然后找到你要使用的那个，<strong data-v-d4c2606e>假如这个模块中有十个方法， 而你只需要使用其中一个，那么他也会把这十个加载出来</strong>。</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// ES6模块</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { stat, exists, readFile } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;fs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e>而ES6中，使用哪个方法就是那个方法，即使这个模块中有多个，<strong data-v-d4c2606e>也只是导出的是你要使用的那个，多余的不会导出</strong>。</p><h2 id="_2-export-导出" tabindex="-1" data-v-d4c2606e>2. export 导出 <a class="header-anchor" href="#_2-export-导出" aria-label="Permalink to &quot;2. export 导出&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e>使用<code data-v-d4c2606e>export</code>定义模块的导出、对外接口。</p><h3 id="写法1" tabindex="-1" data-v-d4c2606e>写法1 <a class="header-anchor" href="#写法1" aria-label="Permalink to &quot;写法1&quot;" data-v-d4c2606e>​</a></h3><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// profile.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> firstName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;Michael&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> lastName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;Jackson&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1958</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><h3 id="写法2" tabindex="-1" data-v-d4c2606e>写法2 <a class="header-anchor" href="#写法2" aria-label="Permalink to &quot;写法2&quot;" data-v-d4c2606e>​</a></h3><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// profile.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> firstName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;Michael&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> lastName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;Jackson&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1958</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { firstName, lastName, year };</span></span></code></pre></div><p data-v-d4c2606e>这样就能对外导出模块中的内容了</p><p data-v-d4c2606e>优先选择第二种方法，因为这样可以把所有的对外接口，写在一起，看起来容易。</p><p data-v-d4c2606e>除了可以导出<strong data-v-d4c2606e>变量</strong>，还可以<strong data-v-d4c2606e>导出函数、类(class)</strong></p><h3 id="注意点" tabindex="-1" data-v-d4c2606e>注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;" data-v-d4c2606e>​</a></h3><p data-v-d4c2606e>需要记住的是<code data-v-d4c2606e>export</code>定义对外的接口，<strong data-v-d4c2606e>必须和模块中的变量建立一一对应的关系，切记不能导出一个变量的值</strong>。</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 报错</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 报错</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> m;</span></span></code></pre></div><p data-v-d4c2606e>以上两种情况都是错误的，因为导出的是一个值，而并非是变量。</p><p data-v-d4c2606e>正确写法</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 写法一</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 写法二</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> {m};</span></span></code></pre></div><h3 id="重命名" tabindex="-1" data-v-d4c2606e>重命名 <a class="header-anchor" href="#重命名" aria-label="Permalink to &quot;重命名&quot;" data-v-d4c2606e>​</a></h3><p data-v-d4c2606e>一般情况导出的名称就是模块内部声明的名称，假如还是想另外起一个名称则可以用关键字<code data-v-d4c2606e>as</code></p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e> v1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>() { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> }</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e> v2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>() { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> }</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> {</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  v1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> streamV1,</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  v2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> streamV2,</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  v2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> streamLatestVersion</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>};</span></span></code></pre></div><p data-v-d4c2606e>上面含义为将函数<code data-v-d4c2606e>v1</code>重命名为<code data-v-d4c2606e>streamV1</code>,然后再导出。也可以将同一个方法，重命名多次都是允许的。</p><h2 id="_3-import-导入" tabindex="-1" data-v-d4c2606e>3. import 导入 <a class="header-anchor" href="#_3-import-导入" aria-label="Permalink to &quot;3. import 导入&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e>使用<code data-v-d4c2606e>import</code>导入需要使用的模块</p><h3 id="使用方法" tabindex="-1" data-v-d4c2606e>使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;" data-v-d4c2606e>​</a></h3><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// main.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { firstName, lastName, year } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./profile.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e> setName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-d4c2606e>element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>) {</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  element.textContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> firstName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39; &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> lastName;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>}</span></span></code></pre></div><p data-v-d4c2606e><code data-v-d4c2606e>import</code>后接一个大括号，里面指定要导入的变量名，这个变量名必须和导出的变量名一致，</p><p data-v-d4c2606e>后面<code data-v-d4c2606e>from</code>导入的模块路径，可以是相对路径， 也可以是绝对路径。如果不带有路径，只是一个模块名，那么必须有配置文件，告诉 JavaScript 引擎该模块的位置。</p><h3 id="重命名-1" tabindex="-1" data-v-d4c2606e>重命名 <a class="header-anchor" href="#重命名-1" aria-label="Permalink to &quot;重命名&quot;" data-v-d4c2606e>​</a></h3><p data-v-d4c2606e>如果不想使用导出的变量名，可以将变量名重新命名。使用关键字<code data-v-d4c2606e>as</code>，as前面为重命名之前的名称，后面为重命名后的名称</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// main.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { firstName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> name } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./profile.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(name);</span></span></code></pre></div><h3 id="只读" tabindex="-1" data-v-d4c2606e>只读 <a class="header-anchor" href="#只读" aria-label="Permalink to &quot;只读&quot;" data-v-d4c2606e>​</a></h3><p data-v-d4c2606e>对于导入的变量名，不能修改，修改会报错，</p><p data-v-d4c2606e>但是如果导入的变量名为对象的话，可以修改，修改后也可以在其他文件中导入使用，但是不建议这样，维护起来会很麻烦。</p><h3 id="提升-默认为模块的顶部" tabindex="-1" data-v-d4c2606e>提升，默认为模块的顶部 <a class="header-anchor" href="#提升-默认为模块的顶部" aria-label="Permalink to &quot;提升，默认为模块的顶部&quot;" data-v-d4c2606e>​</a></h3><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>();</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { foo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;my_module&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e>这样的导入与使用是没有问题的，引入ES6大导入导出是在运行的时候执行的，所以这里的<strong data-v-d4c2606e>导入</strong>会先执行， 而<code data-v-d4c2606e>foo()</code>要等到编译的时候才执行，会晚于导入。</p><h3 id="整体导入加载" tabindex="-1" data-v-d4c2606e>整体导入加载 <a class="header-anchor" href="#整体导入加载" aria-label="Permalink to &quot;整体导入加载&quot;" data-v-d4c2606e>​</a></h3><p data-v-d4c2606e>就是除了一个个加载某个值外，还可以一次性加载所有的，使用关键词<code data-v-d4c2606e>*</code>指定一个对象，将所有的导入都指定在这个对象上。</p><p data-v-d4c2606e>之前的：加载三个需要将这三个都写出来</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// main.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { firstName, lastName, year } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./profile.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e>现在，整体加载后，可以使用x.x形式使用</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// main.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./profile.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(obj.firstName, obj.lastName, obj.year)</span></span></code></pre></div><h2 id="_4-export-default-导出" tabindex="-1" data-v-d4c2606e>4. export default 导出 <a class="header-anchor" href="#_4-export-default-导出" aria-label="Permalink to &quot;4. export default 导出&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e><code data-v-d4c2606e>export default</code>其实是为了解决<code data-v-d4c2606e>export</code>导出时的不足，当使用<code data-v-d4c2606e>export</code>时会发现，导入时的名称要跟导出时的一样， 这样就会造成，必须知道导出时的名称，假如不清楚就不能使用。</p><p data-v-d4c2606e>而<code data-v-d4c2606e>export default</code> 正好解决了这个不足，<code data-v-d4c2606e>export default</code>是默认导出，导出后是一个对象大集合，导入时可以随便命名，使用方法x.x</p><h3 id="使用方法-1" tabindex="-1" data-v-d4c2606e>使用方法 <a class="header-anchor" href="#使用方法-1" aria-label="Permalink to &quot;使用方法&quot;" data-v-d4c2606e>​</a></h3><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// export-default.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> () {</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;foo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>);</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>}</span></span></code></pre></div><p data-v-d4c2606e>在<code data-v-d4c2606e>export-default.js</code>文件中导出一个函数</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// import-default.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> customName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./export-default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>customName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// &#39;foo&#39;</span></span></code></pre></div><p data-v-d4c2606e>导入时，可以随便命名，<strong data-v-d4c2606e>注意点：这是import后不用加大括号</strong></p><h3 id="重点export-default和export区别" tabindex="-1" data-v-d4c2606e>重点export default和export区别 <a class="header-anchor" href="#重点export-default和export区别" aria-label="Permalink to &quot;重点export default和export区别&quot;" data-v-d4c2606e>​</a></h3><p data-v-d4c2606e><code data-v-d4c2606e>export default</code>用于指定模块的默认输出，一个模块只能使用<code data-v-d4c2606e>export default</code><strong data-v-d4c2606e>一次</strong>，<strong data-v-d4c2606e>并且对应的<code data-v-d4c2606e>import</code>不用大括号</strong></p><p data-v-d4c2606e>说通俗一点 <code data-v-d4c2606e>export</code>输出是<code data-v-d4c2606e>export + 咱们自己命名的变量名或方法名</code>，也就是为什么使用<code data-v-d4c2606e>export</code>导出时不能导出一个值，必须是 和变量要一一对应。<strong data-v-d4c2606e>不能导出值必须是名称</strong></p><p data-v-d4c2606e>而<code data-v-d4c2606e>export default</code>就是输出了一个叫做<code data-v-d4c2606e>default</code>的变量或方法，只不过这个名称给咱们提前声明好了。也正因为有了这个变量名(<strong data-v-d4c2606e>default</strong>)， 所以在导出时后不能跟变量声明语句。<strong data-v-d4c2606e>可以导出值但不能是名称</strong></p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 正确</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 正确</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> a;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 错误</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> var a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 正确</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 报错</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e><strong data-v-d4c2606e><code data-v-d4c2606e>export</code>在一个模块中可以使用多次，而<code data-v-d4c2606e>export default</code>只能使用一次。</strong></p><p data-v-d4c2606e>根据关键字<code data-v-d4c2606e>as</code>改名称可以得到以下两种写法都是正确的。</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// modules.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-d4c2606e>x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-d4c2606e>y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>) {</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> y;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>}</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { add </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> };</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 等同于</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// export default add;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// app.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> foo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;modules&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 等同于</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// import foo from &#39;modules&#39;;</span></span></code></pre></div><h3 id="默认导入和个别导入" tabindex="-1" data-v-d4c2606e>默认导入和个别导入 <a class="header-anchor" href="#默认导入和个别导入" aria-label="Permalink to &quot;默认导入和个别导入&quot;" data-v-d4c2606e>​</a></h3><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> _, { each, forEach } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;lodash&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e>这里默认导入为一个名称为<code data-v-d4c2606e>_</code>的，并且部分导入了<code data-v-d4c2606e>each</code>和<code data-v-d4c2606e>forEach</code>模块</p><h2 id="_5-export-与-import-的复合写法" tabindex="-1" data-v-d4c2606e>5. export 与 import 的复合写法 <a class="header-anchor" href="#_5-export-与-import-的复合写法" aria-label="Permalink to &quot;5. export 与 import 的复合写法&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e>意思就是在一个模块中，先导入一个模块，然后再把这个模块再导出，可以先一个简单的语句。</p><p data-v-d4c2606e>正常的语句：</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 导出</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { foo, bar }</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// 导入</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { foo, bar} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;my_module&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e>简写之后：</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> { foo, bar } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;my_module&#39;</span></span></code></pre></div><h2 id="_6-继承" tabindex="-1" data-v-d4c2606e>6. 继承 <a class="header-anchor" href="#_6-继承" aria-label="Permalink to &quot;6. 继承&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e>就是模块中可以继承其他模块的内容</p><p data-v-d4c2606e>假设有三个文件夹，a.js、b.js、c.js</p><p data-v-d4c2606e>a文件中用<code data-v-d4c2606e>export</code>、<code data-v-d4c2606e>export default</code>导出，b文件接受a文件的导出，c文件接受b文件。</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// a.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> num;</span></span></code></pre></div><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// b.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./a.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> () {</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;这是b.js的export default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>)</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>}</span></span></code></pre></div><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> AB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./b.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> exp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./b.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e>AB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>);</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-d4c2606e>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>(exp);</span></span></code></pre></div><p data-v-d4c2606e><img src="`+t+`" alt="inherit.png" data-v-d4c2606e></p><p data-v-d4c2606e>这里需要注意的是：b文件的<code data-v-d4c2606e>export * from &#39;./a.js&#39;;</code>只会导出<code data-v-d4c2606e>export</code>不会导出<code data-v-d4c2606e>export default</code>,所以没有继承a文件的<code data-v-d4c2606e>num</code>变量。</p><h2 id="_7-跨模块常量" tabindex="-1" data-v-d4c2606e>7. 跨模块常量 <a class="header-anchor" href="#_7-跨模块常量" aria-label="Permalink to &quot;7. 跨模块常量&quot;" data-v-d4c2606e>​</a></h2><p data-v-d4c2606e>本质就是利用了模块继承功能，如果需要很多常量，则可以将常量保存到一个文件中，然后直接从这个文件中导入。</p><p data-v-d4c2606e>各种常量</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// constants/db.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> {</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;http://my.couchdbserver.local:5984&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>,</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  admin_username: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>,</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>  admin_password: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;admin password&#39;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>};</span></span>
<span class="line" data-v-d4c2606e></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// constants/user.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-d4c2606e> users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;staff&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;ceo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;chief&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e>&#39;moderator&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>];</span></span></code></pre></div><p data-v-d4c2606e>合并到一个文件</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// constants/index.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> {db} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./db&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> {users} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div><p data-v-d4c2606e>使用</p><div class="language-js vp-adaptive-theme" data-v-d4c2606e><button title="Copy Code" class="copy" data-v-d4c2606e></button><span class="lang" data-v-d4c2606e>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-d4c2606e><code data-v-d4c2606e><span class="line" data-v-d4c2606e><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-d4c2606e>// main.js</span></span>
<span class="line" data-v-d4c2606e><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e> {db, users} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-d4c2606e>from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-d4c2606e> &#39;./constants/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-d4c2606e>;</span></span></code></pre></div>`,91),p=[n];function h(l,c,k,v,r,o){return i(),s("div",null,p)}const y=a(e,[["render",h],["__scopeId","data-v-d4c2606e"]]);export{g as __pageData,y as default};
