import{_ as e,c as s,o as _,l as t,a as o}from"./chunks/framework.DwDoyBw8.js";const $=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ts/对象/8. 对象类型-最小可选属性规则.md","filePath":"ts/对象/8. 对象类型-最小可选属性规则.md"}'),n={name:"ts/对象/8. 对象类型-最小可选属性规则.md"},a=t("p",null,"根据“结构类型”原则，如果一个对象的所有属性都是可选的，那么其他对象跟它都是结构类似的。",-1),l=t("p",null,[o("如果一个对象的属性都是可选的，那它就可以是一个空对象，也意味着任意对象都能满足这个结构，为了避免这种情况的发生，ts引入了"),t("strong",null,"最小可选属性规则，也称为弱类型检测。")],-1),r=t("p",null,"解决方法：",-1),c=t("ul",null,[t("li",null,"在类型中新增一条索引属性[propName: string]: someType"),t("li",null,"使用类型断言opt as type")],-1),p=[a,l,r,c];function i(d,u,m,h,f,x){return _(),s("div",null,p)}const g=e(n,[["render",i]]);export{$ as __pageData,g as default};
