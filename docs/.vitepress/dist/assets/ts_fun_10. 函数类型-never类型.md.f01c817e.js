import{_ as s,o as n,c as a,U as e}from"./chunks/framework.adbdbaa5.js";const d=JSON.parse('{"title":"never类型","description":"","frontmatter":{},"headers":[],"relativePath":"ts/fun/10. 函数类型-never类型.md","filePath":"ts/fun/10. 函数类型-never类型.md"}'),p={name:"ts/fun/10. 函数类型-never类型.md"},l=e(`<h1 id="never类型" tabindex="-1">never类型 <a class="header-anchor" href="#never类型" aria-label="Permalink to &quot;never类型&quot;">​</a></h1><p>never类型表示肯定不会出现的值，它用在函数的返回值，表示某个函数肯定不会返回值，即函数不会正常执行结束。函数没有执行结果，不可能有返回值</p><p>应用</p><ul><li>抛出错误的函数</li></ul><p>只有抛出错误才是never类型，如果是return一个Error对象，则返回值是Error类型。</p><p>抛出错误的情况属于never、void类型，所以从返回值类型中不知道，抛出的是哪一种错误。</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;">never</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>无限执行的函数</li></ul><p>这里while语句，判断条件一直是true，程序会一直循环，不会停止。</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sing </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">():</span><span style="color:#FFCB6B;">never</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sing</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>如果一个函数抛出了异常或者陷入死循环，那么该函数就无法正常返回一个值，这个函数的返回类型就是never。</p><p>而如果程序调用了一个返回值类型为never的函数，就意味着程序会在该函数的调用位置终止，永远不会执行后续的代码。</p><p>一个函数如果某些条件下有正常返回值，另一些条件下抛出错误，这时它的返回值类型可以省略<code>never</code>。</p><p><strong>never类型和void类型区别：never类型表示函数没有执行结束，不可能返回值；void类型表示函数正常执行结束，但是不返回值或者说返回undefined。</strong></p>`,14),o=[l];function t(r,c,i,F,y,D){return n(),a("div",null,o)}const C=s(p,[["render",t]]);export{d as __pageData,C as default};
