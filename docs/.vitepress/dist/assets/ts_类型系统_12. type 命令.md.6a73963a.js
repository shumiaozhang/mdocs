import{_ as s,o as a,c as p,U as n}from"./chunks/framework.adbdbaa5.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ts/类型系统/12. type 命令.md","filePath":"ts/类型系统/12. type 命令.md"}'),e={name:"ts/类型系统/12. type 命令.md"},l=n('<p>用来定义一个类型的别名。就是给一个类型起一个别的名称，一个类型可能很长，可以使用一个简短的别名代替。</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Age</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Age</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">55</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>这里使用Age代替number类型</p><p></p><h2 id="块级作用域" tabindex="-1"> 块级作用域 <a class="header-anchor" href="#块级作用域" aria-label="Permalink to &quot;&amp;#x20;块级作用域&quot;">​</a></h2><p>具有块级作用域，内部定义的别名，不影响外部。</p><p>同一作用域不能同名。</p><h2 id="表达式" tabindex="-1"> 表达式 <a class="header-anchor" href="#表达式" aria-label="Permalink to &quot;&amp;#x20;表达式&quot;">​</a></h2><p>别名支持使用表达式，也可以在定义一个别名时，使用另一个别名，即别名允许嵌套。</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">World</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Greeting</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">hello </span><span style="color:#89DDFF;">${</span><span style="color:#FFCB6B;">World</span><span style="color:#89DDFF;">}`</span><span style="color:#89DDFF;">;</span></span></code></pre></div>',10),o=[l];function t(c,r,y,i,C,D){return a(),p("div",null,o)}const _=s(e,[["render",t]]);export{A as __pageData,_ as default};
